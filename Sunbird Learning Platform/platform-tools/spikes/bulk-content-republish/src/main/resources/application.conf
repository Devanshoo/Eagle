BackendActorSystem{
  akka {
    actor {
    	default-dispatcher {
      		type = "Dispatcher"
    		executor = "fork-join-executor"
    		fork-join-executor {
        		parallelism-min = 1
        		parallelism-factor = 2.0
        		parallelism-max = 4
    		}
      		# Throughput for default Dispatcher, set to 1 for as fair as possible
      		throughput = 1
    	}
    }
  }
}

# Graph Configuration
graph.dir=/data/graphDB
akka.request_timeout=30
environment.id=10000000
graph.ids=["domain"]
graph.passport.key.base=31b6fd1c4d64e745c867e61a45edc34a
route.domain="bolt://localhost:7687"
route.bolt.write.domain="bolt://localhost:7687"
route.bolt.read.domain="bolt://localhost:7687"
route.bolt.comment.domain="bolt://localhost:7687"
route.all="bolt://localhost:7687"
route.bolt.write.all="bolt://localhost:7687"
route.bolt.read.all="bolt://localhost:7687"
route.bolt.comment.all="bolt://localhost:7687"
platform.cache.ttl=3600000

telemetry_env=local

# Kafka configuration details
kafka.topics.instruction="local.learning.republish.job.request"
kafka.urls="localhost:9092"


#neo4j search conditions
#startPosition/resultSize can be configured but the value set it in jenkins jobs will override this values
search_criteria{
      "nodeType": "DATA_NODE",
      "objectType": "Content",
      "metadata": [
          {
                "filters": [
                    {"property" : "contentType", "operator": "in", "value": ["TextBook"]},
                    {"property" : "status", "operator": "in", "value": ["Live","Unlisted"]}
                ]
            }   
      ],
      "startPosition": 0,
      "resultSize":0
      }

# File path
validation.filePath="/data/republished/publishedContent.csv"

# Max content to be pushed for republished in one request
max.content.count=200

# Time gap in each content push for republish
max.time.gap=100